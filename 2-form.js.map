{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь-якими функціями об’єкт formData з полями email та message, які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n// Використовуй метод делегування для відстеження змін у формі через подію input. Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище. Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\nlet formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.feedback-form');\n\nwindow.addEventListener('DOMContentLoaded', onReload);\n\nform.addEventListener('input', onInput); // Використовуй метод делегування для відстеження змін у формі через подію input.\n\nfunction onInput(event) {\n  formData.email = form.elements.email.value.trim();\n  formData.message = form.elements.message.value.trim();\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData)); //Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище. Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n}\n\nfunction onReload(event) {\n  if (localStorage.getItem('feedback-form-state') === null) {\n    form.elements.email.value = '';\n    form.elements.message.value = '';\n  }\n\n  if (localStorage.getItem('feedback-form-state') !== null) {\n    formData = JSON.parse(localStorage.getItem('feedback-form-state'));\n\n    form.elements.email.value = formData.email;\n    form.elements.message.value = formData.message;\n  }\n} // При завантаженні сторінки перевір, чи є дані у локальному сховищі. Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  if (form.elements.email.value === '' || form.elements.message.value === '') {\n    alert('Fill please all fields');\n  }\n\n  if (form.elements.email.value !== '' && form.elements.message.value !== '') {\n    console.log(formData);\n    localStorage.removeItem('feedback-form-state');\n    form.reset();\n    formData = {\n      email: '',\n      message: '',\n    };\n  }\n} // Перед відправленням форми переконайся, що обидва поля форми заповнені. Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n"],"names":["formData","form","onReload","onInput","event","onSubmit"],"mappings":"wFAKA,IAAIA,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAEA,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAEpD,OAAO,iBAAiB,mBAAoBC,CAAQ,EAEpDD,EAAK,iBAAiB,QAASE,CAAO,EAEtC,SAASA,EAAQC,EAAO,CACtBJ,EAAS,MAAQC,EAAK,SAAS,MAAM,MAAM,OAC3CD,EAAS,QAAUC,EAAK,SAAS,QAAQ,MAAM,OAC/C,aAAa,QAAQ,sBAAuB,KAAK,UAAUD,CAAQ,CAAC,CACtE,CAEA,SAASE,EAASE,EAAO,CACnB,aAAa,QAAQ,qBAAqB,IAAM,OAClDH,EAAK,SAAS,MAAM,MAAQ,GAC5BA,EAAK,SAAS,QAAQ,MAAQ,IAG5B,aAAa,QAAQ,qBAAqB,IAAM,OAClDD,EAAW,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAEjEC,EAAK,SAAS,MAAM,MAAQD,EAAS,MACrCC,EAAK,SAAS,QAAQ,MAAQD,EAAS,QAE3C,CAEAC,EAAK,iBAAiB,SAAUI,CAAQ,EAExC,SAASA,EAASD,EAAO,CACvBA,EAAM,eAAc,GAChBH,EAAK,SAAS,MAAM,QAAU,IAAMA,EAAK,SAAS,QAAQ,QAAU,KACtE,MAAM,wBAAwB,EAG5BA,EAAK,SAAS,MAAM,QAAU,IAAMA,EAAK,SAAS,QAAQ,QAAU,KACtE,QAAQ,IAAID,CAAQ,EACpB,aAAa,WAAW,qBAAqB,EAC7CC,EAAK,MAAK,EACVD,EAAW,CACT,MAAO,GACP,QAAS,EACf,EAEA"}